[{"C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\index.js":"1","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\App.js":"2","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\reportWebVitals.js":"3","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\Header\\Header.js":"4","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\Footer\\Footer.js":"5","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\Home\\Home.js":"6","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\Login\\Login.js":"7","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\Signup\\Signup.js":"8","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\AddBook\\AddBook.js":"9","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\SearchBook\\SearchBook.js":"10","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\NewMembership\\NewMembership.js":"11","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\ListMembers\\ListMembers.js":"12","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\Router\\Router.js":"13","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\ErrorPage\\ErrorPage.js":"14","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\ValidateError\\ValidateError.js":"15","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\BookCard\\BookCard.js":"16","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\AdminLogin\\AdminLogin.js":"17","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\AdminHome\\AdminHome.js":"18","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\LibraryTableCheck\\LibraryTableCheck.js":"19"},{"size":500,"mtime":499162500000,"results":"20","hashOfConfig":"21"},{"size":217,"mtime":1613664412635,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":10274,"mtime":1613657253920,"results":"24","hashOfConfig":"21"},{"size":992,"mtime":1613637670665,"results":"25","hashOfConfig":"21"},{"size":6057,"mtime":1613637723258,"results":"26","hashOfConfig":"21"},{"size":6527,"mtime":1613640550783,"results":"27","hashOfConfig":"21"},{"size":12835,"mtime":1613641304029,"results":"28","hashOfConfig":"21"},{"size":12411,"mtime":1613637517531,"results":"29","hashOfConfig":"21"},{"size":8863,"mtime":1613640366716,"results":"30","hashOfConfig":"21"},{"size":9445,"mtime":1613455865408,"results":"31","hashOfConfig":"21"},{"size":3905,"mtime":1613456172885,"results":"32","hashOfConfig":"21"},{"size":3165,"mtime":1613664564798,"results":"33","hashOfConfig":"21"},{"size":1113,"mtime":1612426637862,"results":"34","hashOfConfig":"21"},{"size":813,"mtime":1613019530386,"results":"35","hashOfConfig":"21"},{"size":18671,"mtime":1613637564981,"results":"36","hashOfConfig":"21"},{"size":5697,"mtime":1613643857738,"results":"37","hashOfConfig":"21"},{"size":3744,"mtime":1613662566586,"results":"38","hashOfConfig":"21"},{"size":4475,"mtime":1613664351057,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"ub8gwf",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},"C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\index.js",[],["88","89"],"C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\App.js",[],"C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\reportWebVitals.js",[],"C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\Header\\Header.js",["90","91","92","93","94","95","96","97","98","99","100","101"],"import React from 'react';                      \r\nimport './Header.css';                 \r\nimport {withRouter,useHistory} from \"react-router-dom\";\r\n                                             \r\nimport axios from 'axios'; \r\n\r\n\r\n\r\nclass Header extends React.Component { \r\n  \r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state={\r\n      searchDisplay:\"none\",\r\n      logoutMessageDisplay:'none',\r\n      searchBy:'name',\r\n      searchKey:'',\r\n      bookResultArray:[],\r\n      searchSpinnerDisplay:'none',\r\n      searchButtonDisplay:'',\r\n      searchBookNotFoundErrorDisplay:'none',\r\n      somethingWentWrongErrorDisplay:'none',\r\n      searchScrollerDisplay:'none'\r\n    }\r\n    this.checkLoginStatus();\r\n  }\r\n\r\n  checkLoginStatus(){\r\n    let is_logined=localStorage.getItem('islogined');\r\n    let fullUrl=window.location.href;\r\n    if(!(fullUrl.indexOf('/login')>0 || fullUrl.indexOf('/signup')>0)){\r\n      if(!is_logined){\r\n        this.props.history.push(`/login`);\r\n       \r\n    }\r\n       \r\n     }\r\n    \r\n }\r\n  // searchBook=()=>{\r\n  //      this.setState({searchDisplay:'inline'});\r\n  // }\r\n  closeSeachBox=()=>{\r\n    this.setState({searchDisplay:'none'})\r\n  }\r\n\r\n  navigteTo=(navigateTo)=>{\r\n      // console.log(navigateTo);\r\n        this.props.history.push(`/${navigateTo}`);\r\n  }\r\n  logoutBoxShow=()=>{\r\n    this.setState({logoutMessageDisplay:'inline'});\r\n }\r\n logoutBoxHide=()=>{\r\n   this.setState({logoutMessageDisplay:'none'});\r\n }\r\n logOutUser=(e)=>{\r\n    localStorage.removeItem(\"islogined\");\r\n    localStorage.removeItem(\"username\");\r\n    localStorage.removeItem(\"userid\");\r\n    \r\n    \r\n    this.props.history.push(`/login`);\r\n    this.setState({logoutMessageDisplay:'none'});\r\n }\r\n\r\n onInputChange=(e)=>{\r\n  // console.log(e.target.value);\r\n  this.setState({[e.target.name]:e.target.value});\r\n }\r\n\r\n searchBook=()=>{\r\n     if(this.state.searchKey===''){\r\n       alert('please enter book name !!');\r\n     }else{\r\n       this.communicateServer();\r\n     }\r\n }\r\n\r\n communicateServer=()=>{\r\n  this.showSerachSpinner();\r\n  this.setState({searchBookNotFoundErrorDisplay:'none',somethingWentWrongErrorDisplay:'none',searchScrollerDisplay:'none'})\r\n  let library_id=localStorage.getItem('userid');\r\n  axios.post(\"https://manage-library-backend.herokuapp.com/books/search\",{\r\n   libraryId:library_id,\r\n   searchBy:this.state.searchBy,\r\n   searchKey:this.state.searchKey\r\n   })\r\n  .then( (response)=>{\r\n      this.hideSerachSpinner();\r\n      let feedback=response.data;\r\n       this.setState({searchDisplay:'inline'});\r\n      //  console.log(feedback);\r\n       \r\n      if(feedback.status=='error'){\r\n          this.setState({somethingWentWrongErrorDisplay:''});\r\n      }\r\n      if(feedback.status=='success'){\r\n           if((feedback.books).length===0){\r\n             this.setState({searchBookNotFoundErrorDisplay:''});\r\n           }else{\r\n               \r\n               this.setState({bookResultArray:feedback.books,searchScrollerDisplay:''});\r\n           }\r\n      }\r\n      \r\n      \r\n  })\r\n  .catch((error)=>{\r\n      // console.log(error);\r\n      this.hideSerachSpinner();\r\n      this.setState({searchDisplay:'inline',somethingWentWrongErrorDisplay:''});\r\n  });\r\n\r\n\r\n\r\n\r\n}\r\n\r\n showSerachSpinner=()=>{\r\n    this.setState({searchSpinnerDisplay:'',searchButtonDisplay:'none'}) ;\r\n }\r\n hideSerachSpinner=()=>{\r\n    this.setState({searchSpinnerDisplay:'none',searchButtonDisplay:''});\r\n }\r\nrender() {     \r\n  let fullUrl=window.location.href;\r\n  if(fullUrl.indexOf('/login')>0 || fullUrl.indexOf('/signup')>0){\r\n    // console.log('yes');\r\n     return(<div></div>);\r\n   }\r\n  \r\n  return (                                      \r\n          <div  className=\"Header \" >  \r\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark p-3\">\r\n                <a className=\"navbar-brand\" href=\"#\">\r\n                   <h4 className=\"app-name\">Library Manager</h4>\r\n                </a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                  <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse ml-5\" id=\"navbarTogglerDemo02\">\r\n                \r\n                \r\n                      <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                      <li className=\"nav-item\">\r\n                          <a className=\"nav-link\" ><p className=\"nav-item-cst\" onClick={()=>this.navigteTo('')}>Home</p></a>\r\n                        </li>\r\n                        \r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle nav-item-cst\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                              Books\r\n                            </a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                              <a className=\"dropdown-item\" onClick={()=>this.navigteTo('search-book')}>search Book</a>\r\n                              <a className=\"dropdown-item\" onClick={()=>this.navigteTo('add-book')}>Add book</a>\r\n                             \r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle nav-item-cst\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                              Members\r\n                            </a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                              <a className=\"dropdown-item\" onClick={()=>this.navigteTo('new-membership')}>New Membership</a>\r\n                              <a className=\"dropdown-item\" onClick={()=>this.navigteTo('list-members')}>Show Members</a>\r\n                              \r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                          <a className=\"nav-link\"onClick={this.logoutBoxShow}><p className=\"nav-item-cst\" >Logout </p></a>\r\n                        </li>\r\n                      </ul>\r\n                 \r\n                  \r\n                  <div className=\"d-flex\">\r\n                        <input className=\"input-search\"   type=\"search\" name=\"searchKey\" onChange={this.onInputChange} placeholder=\"Book name\"></input>\r\n                    <div>\r\n                         <button className=\"button-search\" style={{display:this.state.searchButtonDisplay}}  onClick={this.searchBook} type=\"submit\">Search</button>\r\n                         <div className=\"spinner-border   spinner text-light\" style={{display:this.state.searchSpinnerDisplay}}  role=\"status\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </nav> \r\n              \r\n              <div className=\"search-book\" style={{display:this.state.searchDisplay}}>\r\n                 <div className=\"d-flex \">\r\n                  <button type=\"button\" className=\"btn btn-primary mt-3\" onClick={this.closeSeachBox}>Close</button>\r\n                  \r\n                 </div>\r\n                <h1 className=\"text-center\">Results</h1>\r\n                <div className=\"alert alert-danger text-center\" style={{display:this.state.somethingWentWrongErrorDisplay}} role=\"alert\">\r\n                  <b>Something went wrong try again.!!</b>\r\n                </div>\r\n                <div className=\"alert alert-danger text-center\" style={{display:this.state.searchBookNotFoundErrorDisplay}} role=\"alert\">\r\n                  <b>Sorry no books found.!!</b>\r\n                </div>\r\n                <div className=\"search-scroler\" style={{display:this.state.searchScrollerDisplay}}>\r\n                      {\r\n                         this.state.bookResultArray.map((item,key)=>(\r\n                            <div className=\"search-book-card\" key={key}>\r\n                               <h4 className=\"text-center\">{item.name}</h4>\r\n                                <ul>\r\n                                  <li><h5>Author : {item.author}</h5></li>\r\n                                  <li><h5>Genre  : {item.genre}</h5></li>\r\n                                  <li><h5>Publisher  : {item.publisher}</h5></li>\r\n                                </ul>\r\n                                <div className=\"alert alert-danger text-center\" role=\"alert\" style={{display:!(item.isAvilable)?'':'none'}}>\r\n                                  <b>Book is not avialable</b>\r\n                                </div>\r\n                                <div className=\"alert alert-success text-center\" role=\"alert\" style={{display:(item.isAvilable)?'':'none'}}>\r\n                                  <b>Book is avialable</b>\r\n                                </div>\r\n                            </div>  \r\n                         ))\r\n                      }\r\n                    \r\n                    \r\n                       \r\n                </div>\r\n                    \r\n              </div>\r\n              \r\n              {/*  */}\r\n                <div className=\"error-message \" style={{display:this.state.logoutMessageDisplay}}>\r\n                      <h3 className=\"mt-3\">Do you want to logout ?</h3>\r\n                      <div className=\"d-flex justify-content-around mt-5\">\r\n                        <button className=\"button-common m-2\" style={{display:this.state.buttonDisplay}} onClick={this.logOutUser}>yes</button>\r\n                        <button className=\"button-common m-2\" style={{display:this.state.buttonDisplay}} onClick={this.logoutBoxHide}>cancel</button>\r\n                      </div>\r\n                </div> \r\n                \r\n\r\n\r\n\r\n\r\n           \r\n        </div>                           \r\n    );                                          \r\n }                                              \r\n }                                              \r\n                                                \r\n                                                \r\nexport default withRouter(Header);                 \r\n","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\Home\\Home.js",[],"C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\Login\\Login.js",[],"C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\Signup\\Signup.js",["102","103"],"import React from 'react';                      \r\nimport './Signup.css';                 \r\nimport {withRouter} from \"react-router-dom\";                                                 \r\nimport ValidationError from '../ValidateError/ValidateError';\r\nimport axios from 'axios';\r\nimport ErrorImage from '../../images/error.svg'; \r\nclass Signup extends React.Component { \r\n  constructor(props){\r\n     super(props);\r\n     this.state={\r\n      \r\n            name:'',\r\n            email:'',\r\n            password:'',\r\n            confirmPassword:'',\r\n            registrationNo:'',\r\n            EstablishedDate:'',\r\n            place:'',\r\n            pincode:'',\r\n            displayToolTip:'none',\r\n            nameErrorShow:'none',\r\n            emailErrorShow:'none',\r\n            passwordErrorShow:'none',\r\n            confirmPasswordErrorShow:'none',\r\n            registrationErrorShow:'none',\r\n            estdErrorShow:'none',\r\n            placeErrorShow:'none',\r\n            pincodeErrorShow:'none',\r\n            spinnerDisplay:'none',\r\n            signupButtondisplay:'',\r\n            accountCreationSuccessDisplay:'none',\r\n            accountCreationErrorDisplay:'none'\r\n\r\n            \r\n     }\r\n  }\r\n\r\n\r\nnavigate=()=>{\r\n   this.props.history.push(`/login`);\r\n}\r\n\r\nonFormInputChange=(e)=>{\r\n//   console.log(e.target.value);\r\n  this.setState({[e.target.name]:e.target.value});\r\n\r\n}\r\n\r\ncreateAccount=()=>{\r\n   let validationError=false;\r\n   if(this.state.name.length < 3 || this.state.name.length >20){\r\n      this.setState({nameErrorShow:''});\r\n      \r\n      validationError=true;\r\n   }else{\r\n    this.setState({nameErrorShow:'none'});\r\n   }\r\n   \r\n   if(!this.emailValidator(this.state.email)){\r\n      this.setState({emailErrorShow:''});\r\n\r\n      validationError=true;\r\n     \r\n   }else{\r\n      this.setState({emailErrorShow:'none'});\r\n   }\r\n   \r\n   if(this.state.registrationNo.length !== 8 ){\r\n    this.setState({registrationErrorShow:''});\r\n\r\n    validationError=true;\r\n    \r\n    }else{\r\n    this.setState({registrationErrorShow:'none'});\r\n    }\r\n\r\n   //  console.log('date',this.state.EstablishedDate);\r\n    if(this.state.EstablishedDate ==='' ){\r\n      this.setState({estdErrorShow:''});\r\n\r\n      validationError=true;\r\n      \r\n      }else{\r\n      this.setState({estdErrorShow:'none'});\r\n      }\r\n  \r\n      // console.log(this.state.pincode);\r\n      if(this.state.pincode.length !==6){\r\n         this.setState({pincodeErrorShow:''});\r\n\r\n         validationError=true;\r\n        \r\n      }else{\r\n         this.setState({pincodeErrorShow:'none'});\r\n      }\r\n      \r\n      // console.log('password length',this.state.password.length);\r\n      if(this.state.password.length < 6){\r\n         this.setState({passwordErrorShow:''});\r\n\r\n         validationError=true;\r\n        \r\n      }else{\r\n         this.setState({passwordErrorShow:'none'});\r\n      }\r\n      if(this.state.password !== this.state.confirmPassword || this.state.confirmPassword===''){\r\n         this.setState({confirmPasswordErrorShow:''});\r\n\r\n         validationError=true;\r\n        \r\n      }else{\r\n         this.setState({confirmPasswordErrorShow:'none'});\r\n      }\r\n      if(this.state.place ==='' ){\r\n         this.setState({placeErrorShow:''});\r\n\r\n         validationError=true;\r\n         \r\n         }else{\r\n         this.setState({placeErrorShow:'none'});\r\n         }\r\n\r\n      if(!validationError){\r\n         this.communicateServer()\r\n      }else{\r\n         return;\r\n      }\r\n         \r\n\r\n}\r\n\r\n\r\ncommunicateServer=()=>{\r\n    this.setState({accountCreationErrorDisplay:'none',accountCreationErrorDisplay:'none'});\r\n    this.showSpinner();\r\n    axios.post(\"https://manage-library-backend.herokuapp.com/library/register\",{\r\n      name:this.state.name,\r\n      email:this.state.email,\r\n      password:this.state.password,\r\n      registrationNo:this.state.registrationNo,\r\n      EstablishedDate:this.state.EstablishedDate,\r\n      place:this.state.place,\r\n      pincode:this.state.pincode})\r\n     .then( (response)=>{\r\n         this.hideSpinner();          \r\n         let feedback=response.data;\r\n\r\n         //  console.log(feedback);\r\n         if(feedback.status==='error'){\r\n            this.setState({accountCreationErrorDisplay:''});\r\n         }\r\n         if(feedback.status==='success'){\r\n            this.setState({accountCreationSuccessDisplay:''});\r\n         }\r\n         \r\n         \r\n     })\r\n     .catch((error)=>{\r\n         // console.log(error);\r\n        this.hideSpinner();\r\n     });\r\n\r\n\r\n}\r\nshowToolTip=()=>{\r\n   // console.log('show tool');\r\n   this.setState({displayToolTip:''})\r\n}\r\nhideToolTip=()=>{\r\n   this.setState({displayToolTip:'none'})\r\n}\r\nemailValidator=(email)=>{\r\n   let regex=/\\S+@\\S+\\.\\S+/\r\n     if (regex.test(email))\r\n     {\r\n       return (true)\r\n     }\r\n       return (false)\r\n \r\n}\r\n \r\nshowSpinner=()=>{\r\n  this.setState({spinnerDisplay:'',signupButtondisplay:'none'});\r\n}\r\nhideSpinner=()=>{\r\n   this.setState({spinnerDisplay:'none',signupButtondisplay:''});\r\n}\r\nrender() {                                      \r\n  return (                                      \r\n          <div className=\"Signup\" >  \r\n                         \r\n             <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-1\">\r\n                \r\n                </div>\r\n                <div className=\"col-sm-10 d-flex justify-content-center \">\r\n                  \r\n                    <div className=\"login-container mt-5\">\r\n                        <div className=\"login-header\">\r\n                            <h3 className=\"sign-in\">Create an account</h3>\r\n                        </div>\r\n                       \r\n                        <div className=\"login-body\">\r\n                        <div className=\"alert alert-primary\" style={{display:this.state.displayToolTip}} role=\"alert\">\r\n                           <h5><b>provide established date</b></h5>\r\n                        </div>\r\n                          <div className=\"container\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-sm\">\r\n                                    <div  className=\"input-with-error d-flex\">\r\n                                       <input className=\"input-inner\" onChange={this.onFormInputChange} name=\"name\" type=\"text\" placeholder=\"libary name \"></input>\r\n                                       <img style={{display:this.state.nameErrorShow}} src={ErrorImage} alt=\"error\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm\">\r\n                                    <div  className=\"input-with-error d-flex\">\r\n                                       <input className=\"input-inner\" onChange={this.onFormInputChange} name=\"email\" type=\"text\" placeholder=\"email id \"></input>\r\n                                       <img style={{display:this.state.emailErrorShow}} src={ErrorImage} alt=\"error\" />\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                              </div>\r\n                           </div>\r\n                           <div className=\"container\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-sm\">\r\n                                    <div  className=\"input-with-error d-flex\">\r\n                                       <input className=\"input-inner\" onChange={this.onFormInputChange} name=\"password\" type=\"password\" placeholder=\"password\"></input>\r\n                                       <img style={{display:this.state.passwordErrorShow}} src={ErrorImage} alt=\"error\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm\">\r\n                                    <div  className=\"input-with-error d-flex\">\r\n                                       <input className=\"input-inner\" onChange={this.onFormInputChange} name=\"confirmPassword\" type=\"password\" placeholder=\"confirm password\"></input>\r\n                                       <img style={{display:this.state.confirmPasswordErrorShow}} src={ErrorImage} alt=\"error\" />\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                              </div>\r\n                           </div>\r\n                           <div className=\"container\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-sm\">\r\n                                    <div  className=\"input-with-error d-flex\">\r\n                                       <input className=\"input-inner\" onChange={this.onFormInputChange} name=\"registrationNo\" type=\"text\" placeholder=\"registration number \"></input>\r\n                                       <img style={{display:this.state.registrationErrorShow}} src={ErrorImage} alt=\"error\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm\">\r\n                                    <div  className=\"input-with-error d-flex\">\r\n                                       <input className=\"input-inner\" onChange={this.onFormInputChange} name=\"EstablishedDate\" type=\"date\"  onFocus={this.showToolTip} onBlur={this.hideToolTip}></input>\r\n                                       <img style={{display:this.state.estdErrorShow}} src={ErrorImage} alt=\"error\" />\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                              </div>\r\n                           </div>\r\n                           <div className=\"container\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-sm\">\r\n                                    <div  className=\"input-with-error d-flex\">\r\n                                       <input className=\"input-inner\" onChange={this.onFormInputChange} name=\"place\" type=\"text\" placeholder=\"place\"></input>\r\n                                       <img style={{display:this.state.placeErrorShow}} src={ErrorImage} alt=\"error\" />\r\n                                    </div>     \r\n                                </div>\r\n                                <div className=\"col-sm\">\r\n                                    <div  className=\"input-with-error d-flex\">\r\n                                       <input className=\"input-inner\" onChange={this.onFormInputChange} name=\"pincode\" type=\"number\" placeholder=\"pincode\"></input>\r\n                                       <img style={{display:this.state.pincodeErrorShow}} src={ErrorImage} alt=\"error\" />\r\n                                    </div>  \r\n                                </div>\r\n                                \r\n                              </div>\r\n                           </div>    \r\n                              \r\n\r\n                              <button className=\"button-common\" style={{display:this.state.signupButtondisplay}} onClick={this.createAccount}>Login</button>\r\n                              <div style={{display:this.state.spinnerDisplay}}>\r\n                                  <div className=\"spinner-border  spinner\"  role=\"status\" > </div>\r\n                              </div>\r\n                              <br></br>\r\n                              <br></br>\r\n                              <div className=\"alert alert-success\" role=\"alert\" style={{display:this.state.accountCreationSuccessDisplay}}>\r\n                                Account created successfully <b onClick={this.navigate} className=\"signup-bold\">Click here</b> to login .\r\n                              </div>\r\n                              <div className=\"alert alert-warning\" role=\"alert\" style={{display:this.state.accountCreationErrorDisplay}}>\r\n                                 Something went wrong try again .!!\r\n                              </div>\r\n                        </div>\r\n                        <div className=\"login-footer\">\r\n                            <p className=\"account-creation\">Have an account ?</p>\r\n                            <button className=\"sign-up\" onClick={this.navigate}>Login now </button>\r\n                        </div>\r\n                     </div> \r\n                     \r\n                </div>\r\n                <div className=\"col-sm-1\">\r\n                </div>\r\n              </div>\r\n            </div>   \r\n          </div>                              \r\n    );                                          \r\n }                                              \r\n }                                              \r\n                                                \r\n                                                \r\nexport default withRouter(Signup);                 \r\n","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\AddBook\\AddBook.js",["104","105"],"import React from 'react';                      \r\nimport './AddBook.css';                 \r\nimport ErrorImage from '../../images/error.svg';                                              \r\nimport axios from 'axios';\r\n\r\nclass AddBook extends React.Component { \r\n \r\n  constructor(){\r\n    super();\r\n\r\n    this.state={\r\n      buttonDisplay:'inline',\r\n      spinnerDisplay:'none',\r\n      libraryId:'',\r\n      name:'',\r\n      author:'',\r\n      publisher:'',\r\n      genre:'',\r\n      noOfPages:'',\r\n      price:'',\r\n      nameErrorDisplay:'none',\r\n      authorErrorDisplay:'none',\r\n      publisherErrorDisplay:'none',\r\n      genreErrorDisplay:'none',\r\n      noOfPagesErrorDisplay:'none',\r\n      priceErrorDisplay:'none',\r\n      bookCreationErrorDisplay:'none',\r\n      bookCreationSuccessDisplay:'none'\r\n\r\n      \r\n    }\r\n  }\r\n\r\nonInputItemChange=(e)=>{\r\n  // console.log(e.target.value);\r\n  this.setState({[e.target.name]:e.target.value});\r\n}\r\nshowSpinner=()=>{\r\n  this.setState({spinnerDisplay:'',buttonDisplay:'none'});\r\n}\r\nhideSpinner=()=>{\r\n  this.setState({spinnerDisplay:'none',buttonDisplay:''});\r\n}\r\nsubmitForm=()=>{ \r\n    let error=false;\r\n    // console.log('name',this.state.genre);\r\n    this.setState({bookCreationErrorDisplay:'none',bookCreationSuccessDisplay:'none'});\r\n    if(this.state.name===''){\r\n       error=true;\r\n       this.setState({nameErrorDisplay:''});\r\n    }else{\r\n       this.setState({nameErrorDisplay:'none'});\r\n    }\r\n\r\n    if(this.state.author===''){\r\n      error=true;\r\n      this.setState({authorErrorDisplay:''});\r\n    }else{\r\n        this.setState({authorErrorDisplay:'none'});\r\n    }\r\n\r\n    if(this.state.publisher===''){\r\n      error=true;\r\n      this.setState({publisherErrorDisplay:''});\r\n    }else{\r\n        this.setState({publisherErrorDisplay:'none'});\r\n    }\r\n\r\n    if(this.state.genre===''){\r\n      error=true;\r\n      this.setState({genreErrorDisplay:''});\r\n    }else{\r\n        this.setState({genreErrorDisplay:'none'});\r\n    }\r\n    \r\n    if(this.state.noOfPages===''){\r\n      error=true;\r\n      this.setState({noOfPagesErrorDisplay:''});\r\n    }else{\r\n        this.setState({noOfPagesErrorDisplay:'none'});\r\n    }\r\n    \r\n\r\n    if(this.state.price===''){\r\n      error=true;\r\n      this.setState({priceErrorDisplay:''});\r\n    }else{\r\n        this.setState({priceErrorDisplay:'none'});\r\n    }\r\n\r\n    if(!error){\r\n      this.communicateServer();\r\n    }\r\n}\r\nvalidateOnFocusOut=(e)=>{\r\n     \r\n      let inputName=e.target.name;\r\n      \r\n\r\n      switch (inputName) {\r\n        case 'name':\r\n                      if(this.state.name===''){\r\n                             this.setState({nameErrorDisplay:''});\r\n                        }else{ this.setState({nameErrorDisplay:'none'}); }\r\n            break;\r\n        case 'author':\r\n                    if(this.state.author===''){\r\n                          this.setState({authorErrorDisplay:''});\r\n                      }else{ this.setState({authorErrorDisplay:'none'}); }\r\n            break; \r\n            case 'publisher':\r\n                    if(this.state.publisher===''){\r\n                          this.setState({publisherErrorDisplay:''});\r\n                      }else{ this.setState({publisherErrorDisplay:'none'}); }\r\n               break;\r\n            case 'genre':\r\n                        if(this.state.genre===''){\r\n                              this.setState({genreErrorDisplay:''});\r\n                          }else{ this.setState({genreErrorDisplay:'none'}); }\r\n                break; \r\n            case 'noOfPages':\r\n                  if(this.state.noOfPages===''){\r\n                        this.setState({noOfPagesErrorDisplay:''});\r\n                    }else{ this.setState({noOfPagesErrorDisplay:'none'}); }\r\n            break;\r\n          case 'price':\r\n                      if(this.state.price===''){\r\n                            this.setState({priceErrorDisplay:''});\r\n                        }else{ this.setState({priceErrorDisplay:'none'}); }\r\n              break; \r\n      \r\n         default:\r\n          break;\r\n      }\r\n        \r\n\r\n    \r\n      \r\n\r\n     \r\n}\r\ncommunicateServer=()=>{\r\n   this.showSpinner();\r\n   let library_id=localStorage.getItem('userid');\r\n   axios.post(\"https://manage-library-backend.herokuapp.com/books/add\",{\r\n    libraryId:library_id,\r\n    name:this.state.name,\r\n    author:this.state.author,\r\n    publisher:this.state.publisher,\r\n    genre:this.state.genre,\r\n    noOfPages:this.state.noOfPages,\r\n    price:this.state.price})\r\n   .then( (response)=>{\r\n       this.hideSpinner();          \r\n       let feedback=response.data;\r\n\r\n        //console.log(feedback);\r\n       if(feedback.status=='error'){\r\n          this.setState({bookCreationErrorDisplay:''});\r\n              setTimeout(function(){ \r\n                window.location.reload();\r\n          }, 500);\r\n       }\r\n       if(feedback.status=='success'){\r\n          this.setState({bookCreationSuccessDisplay:''});\r\n          setTimeout(function(){ \r\n            window.location.reload();\r\n          }, 500);\r\n       }\r\n       \r\n       \r\n   })\r\n   .catch((error)=>{\r\n        //console.log(error);\r\n      this.hideSpinner();\r\n   });\r\n}\r\nrender() {                                      \r\n  return (                                      \r\n          <div className=\"AddBook mb-5\" >    \r\n             \r\n             <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-1\">\r\n                \r\n                </div>\r\n                <div className=\"col-sm-10 d-flex justify-content-center \">\r\n                  \r\n                    <div className=\"login-container mt-5\">\r\n                        <div className=\"login-header\">\r\n                            <h3 className=\"sign-in\">Add a Book</h3>\r\n                        </div>\r\n                       \r\n                        <div className=\"login-body\">\r\n                        <div className=\"alert alert-danger\" role=\"alert\"  style={{display:this.state.bookCreationErrorDisplay}}>\r\n                            <b>Something went wrong try again .!!</b>\r\n                        </div>\r\n                        <div className=\"alert alert-success\" role=\"alert\" style={{display:this.state.bookCreationSuccessDisplay}}>\r\n                          <b>Book added successfully..!!</b>\r\n                        </div>\r\n                          <div className=\"container\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-sm\">\r\n                                <div   className=\"input-with-error\">\r\n                                   <input onChange={this.onInputItemChange}    onBlur={this.validateOnFocusOut}  className=\"input-inner\" name=\"name\"  type=\"text\" placeholder=\"book name \"></input>\r\n                                   <img style={{display:this.state.nameErrorDisplay}} src={ErrorImage} alt=\"error\" />\r\n                                </div>\r\n                               \r\n                                \r\n                                </div>\r\n                                <div className=\"col-sm\">\r\n                                    <div  className=\"input-with-error\">\r\n                                      <input  onChange={this.onInputItemChange}    onBlur={this.validateOnFocusOut} name=\"author\" className=\"input-inner\" type=\"text\" placeholder=\"author\"></input>\r\n                                      <img style={{display:this.state.authorErrorDisplay}} src={ErrorImage} alt=\"error\" />\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                \r\n                              </div>\r\n                           </div>\r\n                           <div className=\"container\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-sm\">\r\n                                  <div  className=\"input-with-error\">\r\n                                      <select onChange={this.onInputItemChange}    onBlur={this.validateOnFocusOut} className=\"input-inner\" name=\"genre\" >\r\n                                    {/* TALES,Novel,Philosophy,Poems,Science,Spiritual,Sports,Translation,Travelogue,Yoga, */}\r\n                                      <option value=\"Choose genre\">Choose genre</option>\r\n                                      <option value=\"autobiography\">Autobiography</option>\r\n                                      <option value=\"agriculture\">Agriculture</option>\r\n                                      <option value=\"biography\">Biography</option>\r\n                                      <option value=\"novel\">Novel</option>\r\n                                      <option value=\"philosophy\">Philosophy</option>\r\n                                      <option value=\"poems\">Poems</option>\r\n                                      <option value=\"short-story\">Short Story</option>\r\n                                      <option value=\"travelogue\">Travelogue</option>\r\n                                      <option value=\"others\">Others</option>\r\n                                    </select>     \r\n                                       <img style={{display:this.state.genreErrorDisplay}} src={ErrorImage} alt=\"error\" />\r\n                                  </div>\r\n                               \r\n                                \r\n                                </div>\r\n                                <div className=\"col-sm\">\r\n                                     <div  className=\"input-with-error\">\r\n                                            <input onChange={this.onInputItemChange}    onBlur={this.validateOnFocusOut} name=\"publisher\" className=\"input-inner\" type=\"text\" placeholder=\"publisher\"></input>\r\n                                            <img style={{display:this.state.publisherErrorDisplay}} src={ErrorImage} alt=\"error\" />\r\n                                      </div>\r\n                                        \r\n                                </div>\r\n                                \r\n                              </div>\r\n                           </div>\r\n                           <div className=\"container\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-sm\">\r\n                                \r\n                                  <div  className=\"input-with-error\">\r\n                                        <input onChange={this.onInputItemChange}    onBlur={this.validateOnFocusOut} name=\"noOfPages\" className=\"input-inner\" type=\"number\" placeholder=\"no of pages\"></input>\r\n                                        <img style={{display:this.state.noOfPagesErrorDisplay}} src={ErrorImage} alt=\"error\" />\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"col-sm\">\r\n                                  <div  className=\"input-with-error\">\r\n                                        <input onChange={this.onInputItemChange}    onBlur={this.validateOnFocusOut} name=\"price\" className=\"input-inner\" type=\"number\" placeholder=\"price\"></input>\r\n                                        <img style={{display:this.state.priceErrorDisplay}} src={ErrorImage} alt=\"error\" />\r\n                                  </div>\r\n                                  \r\n                                </div>\r\n                                \r\n                              </div>\r\n                           </div>    \r\n      \r\n                              <button className=\"button-common\" style={{display:this.state.buttonDisplay}} onClick={this.submitForm}>Add</button><br></br>\r\n                              <div className=\"spinner-border  spinner\" style={{display:this.state.spinnerDisplay}} role=\"status\">\r\n                               \r\n                              </div>\r\n                        </div>\r\n                        \r\n                     </div> \r\n                     \r\n                </div>\r\n                <div className=\"col-sm-1\">\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>                              \r\n    );                                          \r\n }                                              \r\n }                                              \r\n                                                \r\n                                                \r\nexport default AddBook;                 \r\n","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\SearchBook\\SearchBook.js",[],"C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\NewMembership\\NewMembership.js",["106","107"],"import React from 'react';                      \r\nimport './NewMembership.css';                 \r\nimport ErrorImage from '../../images/error.svg';                                              \r\nimport axios from 'axios';\r\n\r\n                                                \r\nclass NewMembership extends React.Component { \r\n  constructor(){\r\n    super();\r\n\r\n    this.state={\r\n      buttonDisplay:'',\r\n      spinnerDisplay:'none',\r\n      memberId:'',\r\n      libraryId:'',\r\n      name:'',\r\n      email:'',\r\n      password:'',\r\n      memberIdErrorDisplay:'none',\r\n      nameErrorDisplay:'none',\r\n      emailErrorDisplay:'none',\r\n      passwordErrorDisplay:'none',\r\n      memberCreationSuccessDisplay:'none',\r\n      memberCreationErrorDisplay:'none'\r\n      \r\n      \r\n    }\r\n  }\r\n\r\nshowSpinner=()=>{\r\n  this.setState({spinnerDisplay:'',buttonDisplay:'none'});\r\n}\r\nhideSpinner=()=>{\r\n  this.setState({spinnerDisplay:'none',buttonDisplay:''});\r\n}\r\n\r\ninputItemChagned=(e)=>{\r\n    this.setState({[e.target.name]:e.target.value});\r\n    // console.log(e.target.value);\r\n}\r\n\r\n\r\nemailValidator=(email)=>{\r\n  let regex=/\\S+@\\S+\\.\\S+/\r\n    if (regex.test(email))\r\n    {\r\n      return (true)\r\n    }\r\n      return (false)\r\n\r\n}\r\n\r\nvalidateOnFocusOut=(e)=>{\r\n     \r\n  let input_name=e.target.name;\r\n  //  console.log(input_name);\r\n\r\n  switch (input_name) {\r\n    case 'name':\r\n                  if(this.state.name===''){\r\n                    // console.log(this.state.name);\r\n                         this.setState({nameErrorDisplay:''});\r\n                    }else{ this.setState({nameErrorDisplay:'none'}); }\r\n        break;\r\n    case 'email':\r\n                if(! this.emailValidator(this.state.email)){\r\n                      this.setState({emailErrorDisplay:''});\r\n                  }else{ this.setState({emailErrorDisplay:'none'}); }\r\n        break; \r\n        case 'memberId':\r\n                if(this.state.memberId===''){\r\n                      this.setState({memberIdErrorDisplay:''});\r\n                  }else{ this.setState({memberIdErrorDisplay:'none'}); }\r\n           break;\r\n        case 'password':\r\n                    if(this.state.password==='' || (this.state.password).length <5){\r\n                          this.setState({passwordErrorDisplay:''});\r\n                      }else{ this.setState({passwordErrorDisplay:'none'}); }\r\n            break; \r\n        \r\n  \r\n     default:\r\n      break;\r\n  }\r\n}\r\n\r\nformSubmited=()=>{\r\n     let validationError=false;\r\n\r\n     if(this.state.name===''){\r\n           validationError=true;\r\n           this.setState({nameErrorDisplay:''});\r\n      }else{ this.setState({nameErrorDisplay:'none'}); }\r\n\r\n     if(! this.emailValidator(this.state.email)){\r\n        validationError=true;\r\n        this.setState({emailErrorDisplay:''});\r\n      }else{ this.setState({emailErrorDisplay:'none'}); }\r\n\r\n     if(this.state.memberId===''){\r\n        validationError=true;\r\n        this.setState({memberIdErrorDisplay:''});\r\n      }else{ this.setState({memberIdErrorDisplay:'none'}); }\r\n    \r\n     if(this.state.password==='' || (this.state.password).length <5){\r\n        validationError=true;\r\n        this.setState({passwordErrorDisplay:''});\r\n      }else{ this.setState({passwordErrorDisplay:'none'}); }\r\n\r\n\r\n      if(!validationError){\r\n        this.communicateWithServer();\r\n      }\r\n\r\n}\r\n\r\ncommunicateWithServer=()=>{\r\n    this.showSpinner();\r\n\r\n    let library_id=localStorage.getItem('userid');\r\n    axios.post(\"https://manage-library-backend.herokuapp.com/members/create\",{\r\n      memberId:this.state.memberId,\r\n      libraryId:library_id,\r\n      name:this.state.name,\r\n      email:this.state.email,\r\n      password:this.state.password})\r\n    .then( (response)=>{\r\n        this.hideSpinner();          \r\n        let feedback=response.data;\r\n\r\n          //console.log(feedback);\r\n        if(feedback.status=='error'){\r\n            this.setState({memberCreationErrorDisplay:''});\r\n        }\r\n        if(feedback.status=='success'){\r\n            this.setState({memberCreationSuccessDisplay:'',name:'',memberId:'',email:'',password:''});\r\n\r\n        }\r\n        \r\n        \r\n    })\r\n    .catch((error)=>{\r\n          //console.log(error);\r\n        this.hideSpinner();\r\n    });\r\n  }\r\n\r\nrender() {                                      \r\n  return (                                      \r\n          <div className=\"NewMembership\" >\r\n            <br></br> \r\n                  <div className=\"container mb-5\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-1\">\r\n                \r\n                </div>\r\n                <div className=\"col-sm-10 d-flex justify-content-center \">\r\n                  \r\n                    <div className=\"login-container mt-5\">\r\n                        <div className=\"login-header\">\r\n                            <h3 className=\"sign-in\">New Membership</h3>\r\n                        </div>\r\n                       \r\n                        <div className=\"login-body\">\r\n                          \r\n                            <div className=\"alert alert-success\" role=\"alert\" style={{display:this.state.memberCreationSuccessDisplay}}>\r\n                              New Member added successfully.!!\r\n                            </div>\r\n                            <div className=\"alert alert-danger\" role=\"alert\" style={{display:this.state.memberCreationErrorDisplay}}>\r\n                              Something went wrong try again.!!\r\n                            </div>\r\n                            \r\n                           <div className=\"container\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-sm\">\r\n                                    \r\n                                    <div  className=\"input-with-error\">\r\n                                            <input className=\"input-inner\" value={this.state.memberId}   onChange={this.inputItemChagned} type=\"text\" placeholder=\"member id\" name=\"memberId\"  onBlur={this.validateOnFocusOut} ></input>\r\n                                            <img  src={ErrorImage} alt=\"error\" style={{display:this.state.memberIdErrorDisplay}} />\r\n                                    </div> \r\n                                \r\n                                </div>\r\n                                <div className=\"col-sm\">\r\n                                    <div  className=\"input-with-error\">\r\n                                            <input className=\"input-inner\" value={this.state.name}   onChange={this.inputItemChagned} type=\"text\" placeholder=\"name\" name=\"name\"  onBlur={this.validateOnFocusOut} ></input>\r\n                                            <img  src={ErrorImage} alt=\"error\" style={{display:this.state.nameErrorDisplay}} />\r\n                                    </div> \r\n                                </div>\r\n                                \r\n                              </div>\r\n                           </div>\r\n                           <div className=\"container\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-sm\">\r\n                                  <div  className=\"input-with-error\">\r\n                                            <input className=\"input-inner\" value={this.state.email}  onChange={this.inputItemChagned} type=\"text\" placeholder=\"email\" name=\"email\"  onBlur={this.validateOnFocusOut} ></input>\r\n                                            <img  src={ErrorImage} alt=\"error\" style={{display:this.state.emailErrorDisplay}} />\r\n                                  </div> \r\n                                \r\n                                </div>\r\n                                <div className=\"col-sm\">\r\n                                    <div  className=\"input-with-error\">\r\n                                            <input className=\"input-inner\" value={this.state.password}   onChange={this.inputItemChagned} type=\"text\" placeholder=\"password\" name=\"password\"  onBlur={this.validateOnFocusOut} ></input>\r\n                                            <img  src={ErrorImage} alt=\"error\" style={{display:this.state.passwordErrorDisplay}} />\r\n                                    </div> \r\n                                </div>\r\n                                \r\n                              </div>\r\n                           </div>\r\n                           \r\n      \r\n                              <button className=\"button-common\" style={{display:this.state.buttonDisplay}} onClick={this.formSubmited}>create</button><br></br>\r\n                              <div className=\"spinner-border  spinner\" style={{display:this.state.spinnerDisplay}} role=\"status\">\r\n                                  {/* <span className=\"sr-only\">Loading...</span> */}\r\n                              </div>\r\n                        </div>\r\n                        \r\n                     </div>\r\n                      \r\n                     \r\n                </div>\r\n                <div className=\"col-sm-1\">\r\n                  \r\n                </div>\r\n                </div>\r\n                </div>\r\n            \r\n              <br></br> \r\n          </div>                              \r\n    );                                          \r\n }                                              \r\n }                                              \r\n                                                \r\n                                                \r\nexport default NewMembership;                 \r\n","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\ListMembers\\ListMembers.js",["108"],"import React from 'react';                      \r\nimport './ListMembers.css';                 \r\nimport axios from 'axios';                                              \r\n                                                \r\nclass ListMembers extends React.Component { \r\n\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      memberslist:[],\r\n      preloaderDisplay:'',\r\n      memberNotFoundErrorDisplay:'none',\r\n      \r\n    }\r\n  }\r\n  componentWillMount(){\r\n     this.preloadata();\r\n  }\r\n  preloadata=()=>{\r\n    let library_id=localStorage.getItem('userid');\r\n      axios.post(\"https://manage-library-backend.herokuapp.com/members/fetch-all\",{\r\n      libraryId:library_id,\r\n      })\r\n      .then( (response)=>{\r\n          \r\n          let feedback=response.data;\r\n          // console.log(feedback.info);\r\n          this.setState({memberslist:feedback.info,preloaderDisplay:'none'});\r\n\r\n          if(this.state.memberslist.length==0){\r\n            this.setState({memberNotFoundErrorDisplay:''})\r\n          }\r\n          \r\n      })\r\n      .catch((error)=>{\r\n         this.setState({preloaderDisplay:'none'})\r\n          //console.log(error);\r\n      });\r\n  }\r\nrender() {  \r\n                                \r\n  return (                                      \r\n          <div class=\"ListMembers\" >   \r\n             <h3 className=\"m-5 text-center\">Members</h3>  \r\n             <div className=\"p-3\">\r\n               <div className=\"text-center\">\r\n                  <div className=\"spinner-border  spinner\"  role=\"status\" style={{display:this.state.preloaderDisplay}} ></div>\r\n                    <div className=\"alert alert-warning\" role=\"alert\" style={{display:this.state.memberNotFoundErrorDisplay}}>\r\n                      No members found..!!\r\n                    </div>\r\n               </div>\r\n                <div class=\"table-responsive\" style={{display:this.state.preloaderDisplay===''?'none':''}}>\r\n                  <table class=\"table table-hover\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">No</th>\r\n                        <th scope=\"col \"  className=\"no-word-wrap\">Member Id</th>\r\n                        <th scope=\"col\" >Name</th>\r\n                        <th scope=\"col\" >Email</th>\r\n                        <th scope=\"col\" className=\"no-word-wrap\">Membership Date</th>\r\n                        \r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {\r\n                           this.state.memberslist.map((item,key)=>(\r\n                            <tr className=\"table-row\" key={key}>\r\n                            <th scope=\"row\">{key+1}</th>\r\n                            <td className=\"no-word-wrap\">{item.memId}</td>\r\n                            <td className=\"no-word-wrap\">{item.name}</td>\r\n                            <td className=\"no-word-wrap\">{item.email}</td>\r\n                            <td className=\"no-word-wrap\">{item.membershipDate}</td>\r\n                          </tr>                       \r\n                            \r\n                          ))\r\n                      }\r\n                     \r\n                      \r\n                      \r\n                     \r\n                    </tbody>\r\n                  </table>\r\n                     <div  style={{height:'40vh',display:(this.state.memberslist).length=== 0 ? '':'none'}}></div>\r\n                     \r\n                     \r\n                </div>\r\n             </div>\r\n             <div  style={{height:'40vh',display:this.state.preloaderDisplay}}></div>\r\n          </div>                              \r\n    );                                          \r\n }                                              \r\n }                                              \r\n                                                \r\n                                                \r\nexport default ListMembers;                 \r\n","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\Router\\Router.js",[],"C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\ErrorPage\\ErrorPage.js",[],"C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\ValidateError\\ValidateError.js",[],"C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\BookCard\\BookCard.js",["109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"import React from 'react';                      \r\nimport './BookCard.css';                 \r\nimport axios from 'axios';                                                \r\nimport ErrorImage from '../../images/error.svg';  \r\n\r\nclass BookCard extends React.Component { \r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      deleteDialogueDisplay:'none',\r\n      deleteSpinnerDisplay:'none',\r\n      deleteDialogueItemsDisplay:'',\r\n      deleteDialogueSpinnerDisplay:'none',\r\n      bookDeletionSuccessDisplay:'none',\r\n      bookDeletionErrorDisplay:'none',\r\n      bookname:this.props.name,\r\n      membersList:[],\r\n      memberName:'',\r\n      memberId:'',\r\n      bookId:'',\r\n      renters_name:'',\r\n      book_issue_id:'',\r\n      book_renters_id:'',\r\n      issuBookDialogueDisplay:'none',\r\n      memebrNotSelectedErrorDisplay:'none',\r\n      issuebookDialogueItemsDisplay:'',\r\n      issuBookDialogueSpinnerDisplay:'none',\r\n      issueBookSuccessDisplay:'none',\r\n      issueBookErrorDisplay:'none',\r\n      issueBookLimitReachedErrorDisplay:'none',\r\n      returnBookDialogueButtonDisplay:'',\r\n      returnBookDialogueSpinnerDisplay:'none',\r\n      returnBookDialogueDisplay:'none',\r\n      returnBookErrorDisplay:'none',\r\n      returnBookSuccessDisplay:'none' \r\n    }\r\n    \r\n  }\r\n  \r\n  componentWillMount(){\r\n    this.loadPreData();\r\n  }\r\n  loadPreData=()=>{\r\n      let library_id=localStorage.getItem('userid');\r\n      axios.post(\"https://manage-library-backend.herokuapp.com/members/fetch-all\",{\r\n      libraryId:library_id,\r\n      })\r\n      .then( (response)=>{\r\n\r\n          let feedback=response.data;\r\n          this.setState({membersList:feedback.info});\r\n          // console.log(feedback);  \r\n      })\r\n      .catch((error)=>{\r\n          //console.log(error);\r\n      });\r\n  }\r\n  clickHandler=(item)=>{\r\n      switch (item) {\r\n        case 'delete-dialogue':\r\n               if(this.state.deleteDialogueDisplay==='none'){\r\n                 this.setState({deleteDialogueDisplay:''});\r\n               }else{\r\n                 this.setState({deleteDialogueDisplay:'none'});\r\n               }\r\n            break;\r\n        case 'delete-book':\r\n            if(this.state.deleteDialogueSpinnerDisplay==='none'){\r\n              this.setState({deleteDialogueSpinnerDisplay:'',deleteDialogueItemsDisplay:'none'});\r\n            }else{\r\n              this.setState({deleteDialogueSpinnerDisplay:'none',deleteDialogueItemsDisplay:''});\r\n            }\r\n         break;\r\n        case 'return-book-dialogue':\r\n               \r\n          break;\r\n\r\n        \r\n      \r\n        default:\r\n          break;\r\n      }\r\n  }\r\n  showDeleteDialogue=()=>{\r\n    this.setState({deleteDialogueDisplay:''});\r\n  }\r\n  hideDeleteDialogue=()=>{\r\n    this.setState({deleteDialogueDisplay:'none'});\r\n  }\r\n  deleteBook=(bookId)=>{\r\n      //  console.log(bookId);\r\n      \r\n      this.setState({deleteDialogueItemsDisplay:'none',deleteSpinnerDisplay:''});\r\n      let library_id=localStorage.getItem('userid');\r\n      axios.post(\"https://manage-library-backend.herokuapp.com/books/delete\",{\r\n        libraryId:library_id,\r\n        bookId:bookId\r\n      })\r\n      .then( (response)=>{\r\n          this.setState({deleteSpinnerDisplay:'none'});\r\n          let feedback=response.data;\r\n          //console.log(feedback);\r\n          if(feedback.status=='success'){\r\n             this.setState({bookDeletionSuccessDisplay:''});\r\n             setTimeout(function(){ \r\n              window.location.reload();\r\n              }, 500);\r\n          }\r\n          if(feedback.status=='error'){\r\n            this.setState({bookDeletionErrorDisplay:''});\r\n            setTimeout(function(){ \r\n              window.location.reload();\r\n              }, 500);\r\n          }\r\n\r\n      })\r\n      .catch((error)=>{\r\n          //console.log(error);\r\n          this.setState({deleteSpinnerDisplay:'none',bookDeletionErrorDisplay:''});\r\n\r\n      });\r\n\r\n  }\r\n  selectChanged=(e)=>{\r\n     this.setState({memberId:e.target.value});\r\n    //  console.log(e.target.value);\r\n    this.setState({memebrNotSelectedErrorDisplay:'none'});\r\n  }\r\n\r\n  issueBookButtonClick=(book_name,book_id)=>{\r\n        // console.log('book id',book_id);\r\n         this.setState({issuBookDialogueDisplay:'',bookname:book_name,bookId:book_id});\r\n  }\r\n  HideBookIssueDialogue=()=>{\r\n     this.setState({issuBookDialogueDisplay:'none'});\r\n  }\r\n  issueBook=()=>{\r\n     if(this.state.memberId===''){\r\n       this.setState({memebrNotSelectedErrorDisplay:''});\r\n     }else{\r\n        this.communicateServer();\r\n     }\r\n  }\r\n  showBookReturnDialogue=()=>{\r\n      this.setState({returnBookDialogueDisplay:'',\r\n                 bookId:this.props.bookId,\r\n                 book_issue_id:this.props.bookIssueId,\r\n                renters_name:this.props.bookRentersname,\r\n                book_renters_id:this.props.bookRentersId});\r\n  }\r\n  hideBookReturnDialogue=()=>{\r\n\r\n     this.setState({returnBookDialogueDisplay:'none'});\r\n  }\r\n  communicateServer=()=>{\r\n      this.setState({issuebookDialogueItemsDisplay:'none',issuBookDialogueSpinnerDisplay:'',});\r\n      let library_id=localStorage.getItem('userid');\r\n//      \r\n\r\n      //  console.log(library_id,\"fhjkfj\",this.state.memberId,this.state.bookId);\r\n      // https://manage-library-backend.herokuapp.com/books/issue\r\n      axios.post(\"https://manage-library-backend.herokuapp.com/books/issue\",{\r\n        libraryId:library_id,\r\n        memberId:this.state.memberId,\r\n        bookId:this.state.bookId\r\n      })\r\n      .then( (response)=>{\r\n        this.setState({issuebookDialogueItemsDisplay:'',issuBookDialogueSpinnerDisplay:'none',issuebookDialogueItemsDisplay:'none'});\r\n          let feedback=response.data;\r\n          //  console.log(feedback);\r\n          if(feedback.status=='success'){\r\n            this.setState({issueBookSuccessDisplay:'',issuebookDialogueItemsDisplay:'none'});\r\n              setTimeout(function(){ \r\n                   window.location.reload();\r\n              }, 500);\r\n             \r\n              \r\n          }\r\n          if(feedback.status=='error' && feedback.message==''){\r\n            this.setState({issueBookErrorDisplay:''});\r\n          }\r\n          if(feedback.status=='error' && feedback.message=='limit reached'){\r\n            this.setState({issueBookLimitReachedErrorDisplay:''});\r\n                setTimeout(function(){ \r\n                  window.location.reload();\r\n            }, 500);\r\n          }\r\n\r\n      })\r\n      .catch((error)=>{\r\n          //console.log(error);\r\n          this.setState({issueBookErrorDisplay:'',issuebookDialogueItemsDisplay:'',issuBookDialogueSpinnerDisplay:'none',});\r\n\r\n      });\r\n\r\n\r\n  }\r\n\r\n  returnBook=()=>{\r\n       this.setState({returnBookDialogueButtonDisplay:'none',returnBookDialogueSpinnerDisplay:''});\r\n\r\n       let library_id=localStorage.getItem('userid');\r\n       let returnObj={libraryId:library_id,\r\n                      memberId:this.state.book_renters_id,\r\n                      bookId:this.state.bookId,\r\n                      bookIssueId:this.state.book_issue_id}\r\n\r\n        // console.log('book return object',returnObj); \r\n           \r\n        // https://manage-library-backend.herokuapp.com/books/return          \r\n       axios.post(\"https://manage-library-backend.herokuapp.com/books/return\",returnObj)\r\n       .then( (response)=>{\r\n           this.setState({returnBookDialogueButtonDisplay:'none',returnBookDialogueSpinnerDisplay:'none'});   \r\n           let feedback=response.data;\r\n           this.setState({resultsDisplay:''});\r\n            // console.log(feedback);\r\n           if(feedback.status=='error'){\r\n              this.setState({returnBookErrorDisplay:''});\r\n              setTimeout(function(){ \r\n                window.location.reload();\r\n                 }, 500);\r\n           }\r\n           if(feedback.status=='success'){\r\n               this.setState({returnBookSuccessDisplay:''});\r\n               setTimeout(function(){ \r\n                window.location.reload();\r\n               }, 500);\r\n                \r\n           }\r\n           \r\n           \r\n       })\r\n       .catch((error)=>{\r\n            //console.log(error);\r\n    \r\n            this.setState({returnBookDialogueButtonDisplay:'none',returnBookDialogueSpinnerDisplay:'none'});\r\n        \r\n       });\r\n\r\n  }\r\n \r\nrender() {                                      \r\n  return (                                      \r\n          <div className=\"BookCard\" >  \r\n                         \r\n                        <div className=\"card m-5\" >\r\n                                  <div className=\"card-header text-center\">\r\n                                    <h3 className=\"book-name\">{this.props.name}</h3>\r\n                                  </div>\r\n                                  <div className=\"card-body\">\r\n                                    <ul>{this.props.isAvilable}\r\n                                        <li><b>Author : {this.props.author}</b></li>\r\n                                        <li><b>genre : {this.props.genre}</b></li>\r\n                                        <li><b>Publisher : {this.props.publisher}</b></li>\r\n                                        <li><b>Price : {this.props.price}</b></li>\r\n                                        <li><b>No of pages : {this.props.noOfPages}</b></li>\r\n                                        \r\n                                    </ul>\r\n                                    <br></br>\r\n                                    <div className=\"alert alert-danger text-center m-3\"  role=\"alert\" style={{display:this.props.bookAvailable==false ?'':'none',}}>\r\n                                          <b>Sorry this book is not available</b>\r\n                                    </div>\r\n                                    <br></br>\r\n                                    <div className=\"d-flex justify-content-between \" >  \r\n                                             <button type=\"button\" style={{display:this.props.bookAvailable==false ?'none':'',}}  className=\"btn btn-info ml-5\" onClick={()=>this.issueBookButtonClick(this.props.name,this.props.bookId)}>Issue book</button>\r\n                                             <button type=\"button\" style={{display:this.props.bookAvailable==false ?'none':'',}} className=\"btn btn-danger mr-5\"  onClick={()=>this.clickHandler('delete-dialogue')}>Delete book</button> \r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                       <button type=\"button\" style={{display:this.props.bookAvailable==false ?'':'none',}} className=\"btn btn-primary mr-5\"  onClick={this.showBookReturnDialogue}>Return Book</button>\r\n                                    </div>\r\n                                  </div>\r\n                                </div> \r\n                                {/* delete book */}\r\n                                <div className=\"error-message\" style={{display:this.state.deleteDialogueDisplay}}>\r\n                                      <h3 className=\"mt-3\">Do you want to delete {this.props.name} ?</h3>\r\n                                      <div className=\"d-flex justify-content-around mt-5\">\r\n                                        <button className=\"button-common m-2\" onClick={()=>{this.deleteBook(this.props.bookId)}}  style={{display:this.state.deleteDialogueItemsDisplay}}>yes</button>\r\n                                        <button className=\"button-common m-2\" onClick={()=>this.clickHandler('delete-dialogue')} style={{display:this.state.deleteDialogueItemsDisplay}}>cancel</button>\r\n                                        <div className=\"spinner-border  spinner\"  role=\"status\" style={{display:this.state.deleteSpinnerDisplay}}></div> \r\n                                      \r\n                                      \r\n                                    </div>\r\n                                    <br></br>\r\n                                      <div className=\"alert alert-success\" role=\"alert\" style={{display:this.state.bookDeletionSuccessDisplay}}>\r\n                                            book deleted .!! Click here to <b className=\"cursor-pointer\" onClick={()=>this.clickHandler('delete-dialogue')}>close</b>\r\n                                      </div>\r\n                                      <div className=\"alert alert-warning\" role=\"alert\" style={{display:this.state.bookDeletionErrorDisplay}}>\r\n                                            something went wrong .!! Click here to <b className=\"cursor-pointer\" onClick={()=>this.clickHandler('delete-dialogue')}>close</b>\r\n                                        </div>\r\n                                    <br></br>\r\n                              </div>\r\n\r\n                              <div className=\"issue-book-dialouge\" style={{display:this.state.issuBookDialogueDisplay}}>\r\n                                  \r\n                                  <div className=\"login-header\">\r\n                                     <button type=\"button\" className=\"close \" onClick={this.HideBookIssueDialogue}>\r\n                                        <span aria-hidden=\"true\" className=\"close-custom\">&times;</span>\r\n                                      </button>\r\n                                      <h3 className=\"sign-in\">Issue Book</h3>\r\n                                      \r\n                                  </div>\r\n                                \r\n                                  <div className=\"login-body\">\r\n                                    <br></br>\r\n                                    <div className=\"alert alert-success\" role=\"alert\" style={{display:this.state.issueBookSuccessDisplay}}>Book issued successfully.! </div>\r\n                                    <div className=\"alert alert-danger\" role=\"alert\" style={{display:this.state.issueBookErrorDisplay}}>Something went wrong try again </div>\r\n                                    <div className=\"alert alert-danger\" role=\"alert\" style={{display:this.state.issueBookLimitReachedErrorDisplay}}>This user Reached Book issue Limit.</div>\r\n                                     <h4>Issuing {this.state.bookname} for</h4>\r\n                                    <br></br>\r\n                                    <div className=\"container \">\r\n                                        <div className=\"row \">\r\n                                          <div className=\"col-sm d-flex justify-content-center \">\r\n                                                <div  className=\"input-with-error\">\r\n\r\n                                                  <select className=\"input-inner\" name=\"memberId\" onChange={this.selectChanged}>\r\n                                                    <option value=\"\">Select member</option>\r\n                                                    {\r\n                                                      this.state.membersList.map((item,key)=>(\r\n                                                        \r\n                                                        <option value={item._id} key={key}>{item.name} ({item.memId})</option>\r\n                                                      ))\r\n\r\n                                                    }\r\n                                                  </select>\r\n                                                  <img  src={ErrorImage} alt=\"error\" style={{display:this.state.memebrNotSelectedErrorDisplay}}/>\r\n                                                </div> \r\n                                              \r\n                                          \r\n                                          </div>\r\n                                          \r\n                                          \r\n                                        </div>\r\n                                    </div>\r\n\r\n                                      \r\n                                        <button className=\"button-common\"  onClick={this.issueBook} style={{display:this.state.issuebookDialogueItemsDisplay}}>Issue</button><br></br>\r\n                                        <div className=\"spinner-border  spinner\"  role=\"status\" style={{display:this.state.issuBookDialogueSpinnerDisplay}} ></div>\r\n                                  </div>\r\n                                  \r\n                                                            \r\n                              </div>  \r\n\r\n\r\n                              {/* return book */}\r\n                              <div className=\"issue-book-dialouge\" style={{width:'50vh',display:this.state.returnBookDialogueDisplay}} >\r\n                                  \r\n                                  <div className=\"login-header\">\r\n                                     <button type=\"button\" className=\"close \" onClick={this.hideBookReturnDialogue}>\r\n                                        <span aria-hidden=\"true\" className=\"close-custom\">&times;</span>\r\n                                      </button>\r\n                                      <h3 className=\"sign-in\">Return Book</h3>\r\n                                      \r\n                                  </div>\r\n                                \r\n                                  <div className=\"login-body\">\r\n                                    <br></br>\r\n                                    <div className=\"alert alert-success\" role=\"alert\" style={{display:this.state.returnBookSuccessDisplay}}>Book returned successfully.! </div>\r\n                                    <div className=\"alert alert-danger\" role=\"alert\" style={{display:this.state.returnBookErrorDisplay}}>Something went wrong try again.! </div>\r\n                                      <h4>Returning {this.state.bookname} taken by {this.state.renters_name}</h4>\r\n                                       <br></br>\r\n                                  \r\n\r\n                                      \r\n                                        <button className=\"button-common\"   style={{display:this.state.returnBookDialogueButtonDisplay}} onClick={this.returnBook}>Return</button><br></br>\r\n                                        <div className=\"spinner-border  spinner\"  role=\"status\" style={{display:this.state.returnBookDialogueSpinnerDisplay}} ></div>\r\n                                  </div>\r\n                                  \r\n                                                            \r\n                              </div>  \r\n                             \r\n                             \r\n          </div>                              \r\n    );                                          \r\n }                                              \r\n }                                              \r\n                                                \r\n                                                \r\nexport default BookCard;                 \r\n","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\AdminLogin\\AdminLogin.js",["123","124","125"],"import React from 'react';                      \r\nimport './AdminLogin.css';                 \r\nimport {withRouter} from \"react-router-dom\";                                             \r\nimport axios from \"axios\";\r\nimport ErrorImage from '../../images/error.svg';                                                  \r\n                                                \r\nclass AdminLogin extends React.Component { \r\n   constructor(){\r\n     super();\r\n     this.state={\r\n        email:'',\r\n        password:'',\r\n        loginErrorShow:'none',\r\n        emailErrorShow:'none',\r\n        passwordErrorShow:'none',\r\n        spinnerShow:'none',\r\n        loginButtonShow:''\r\n     }\r\n   }\r\n\r\ninputItemChanged=(e)=>{\r\n  // console.log(e.target.value);\r\n  this.setState({[e.target.name]:e.target.value});\r\n}\r\nvalidateOnFocusOut=(e)=>{\r\n  //  console.log(e.target.name);\r\n  if(e.target.name=='email'){\r\n        if(!this.emailValidator(this.state.email)){\r\n          this.setState({emailErrorShow:''});\r\n      }else{\r\n          this.setState({emailErrorShow:'none'});\r\n      }\r\n  }\r\n  \r\n   if(e.target.name==\"password\"){\r\n      if(this.state.password===''){\r\n        this.setState({passwordErrorShow:''});\r\n        }else{\r\n            this.setState({passwordErrorShow:'none'});\r\n        }\r\n   }\r\n   \r\n}\r\n\r\nsubmitForm=()=>{\r\n  let validation_error=false;\r\n\r\n  if(!this.emailValidator(this.state.email)){\r\n    validation_error=true;\r\n    this.setState({emailErrorShow:''});\r\n  }else{\r\n      \r\n      this.setState({emailErrorShow:'none'});\r\n  }\r\n\r\n\r\n  if(this.state.password===''){\r\n      validation_error=true;\r\n      \r\n      this.setState({passwordErrorShow:''});\r\n    }else{\r\n        this.setState({passwordErrorShow:'none'});\r\n    }\r\n\r\n    if(!validation_error){\r\n      this.communicateWithServer()\r\n    }\r\n   \r\n}\r\n\r\ncommunicateWithServer=()=>{\r\n     this.setState({spinnerShow:'',loginButtonShow:'none',loginErrorShow:'none'});\r\n     axios.post(\"https://manage-library-backend.herokuapp.com/admin/login\",{\r\n      email:this.state.email,\r\n      password:this.state.password})\r\n     .then( (response)=>{\r\n        this.setState({spinnerShow:'none',loginButtonShow:''});\r\n         console.log(response.data);\r\n         let feedback=response.data;\r\n         if(feedback.status==='error'){\r\n           this.setState({loginErrorShow:''});\r\n         }\r\n         if(feedback.status==='success'){\r\n          //  this.saveUSerInformations(true,feedback.info._id,feedback.info.name);\r\n          //  this.navigate('');\r\n         }\r\n         \r\n     })\r\n     .catch((error)=>{\r\n         // console.log(error);\r\n         this.setState({spinnerShow:'none',loginButtonShow:''});\r\n     });\r\n}\r\n\r\n\r\n\r\nemailValidator=(email)=>{\r\n  let regex=/\\S+@\\S+\\.\\S+/\r\n    if (regex.test(email))\r\n    {\r\n      return (true)\r\n    }\r\n      return (false)\r\n\r\n}\r\nrender() {                                      \r\n  return (                                      \r\n          <div className=\"AdminLogin\" > \r\n              <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                \r\n                </div>\r\n                <div className=\"col-sm d-flex justify-content-center text-center pt-5 \">\r\n                  \r\n                    <div className=\"login-container mt-5\">\r\n                        <div className=\"login-header\">\r\n                            <h3 className=\"sign-in\">Admin Login</h3>\r\n                        </div>\r\n                        <div className=\"login-body\">\r\n                            <div  className=\"alert alert-danger\" style={{display:this.state.loginErrorShow}} role=\"alert\">\r\n                              <b >Sorry we can't find that user.!!</b>\r\n                            </div>\r\n                            \r\n                            <div  className=\"input-with-error d-flex\">\r\n                                <input className=\"input-inner\" onChange={this.inputItemChanged} onBlur={this.validateOnFocusOut} name='email' type=\"text\" placeholder=\"email id\"></input>\r\n                                <img  src={ErrorImage} style={{display:this.state.emailErrorShow}} alt=\"error\" />\r\n                            </div>\r\n                            <div  className=\"input-with-error d-flex\">\r\n                                <input className=\"input-inner\" onChange={this.inputItemChanged} onBlur={this.validateOnFocusOut} name='password' type=\"password\" placeholder=\"password\"></input>\r\n                                <img  src={ErrorImage} style={{display:this.state.passwordErrorShow}} alt=\"error\" />\r\n                            </div>   \r\n                              <div >\r\n                                <button className=\"button-common\" style={{display:this.state.loginButtonShow}} onClick={this.submitForm}>Login</button>\r\n                                <br></br>\r\n                                  <div className=\"spinner-border  spinner\" style={{display:this.state.spinnerShow}} role=\"status\" > </div>\r\n                              </div>\r\n                              \r\n                             \r\n                        </div>\r\n                        \r\n                     </div> \r\n                    \r\n                     \r\n                </div>\r\n                <div className=\"col-sm\">\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>    \r\n          </div>                              \r\n    );                                          \r\n }                                              \r\n }                                              \r\n                                                \r\n                                                \r\nexport default AdminLogin;                 \r\n","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\AdminHome\\AdminHome.js",["126"],"import React from 'react';                      \r\nimport './AdminHome.css';                 \r\n import axios from 'axios';\r\n import Check from \"../LibraryTableCheck/LibraryTableCheck\";\r\nclass AdminHome extends React.Component { \r\n  constructor(){\r\n    super();\r\n    this.state={\r\n       libaryList:[],\r\n       libarysNotFoundShow:'none',\r\n       tableShow:'none',\r\n       spinnerShow:''\r\n    }\r\n   \r\n    \r\n    \r\n  }\r\n\r\n  componentWillMount=()=>{\r\n    this.loadPreData();\r\n  }\r\n\r\n \r\n loadPreData(){\r\n  axios.post(\"https://manage-library-backend.herokuapp.com/admin/fetch-librarys\",{\r\n    })\r\n   .then( (response)=>{\r\n          this.setState({spinnerShow:'none',tableShow:''});\r\n          let feedback=response.data;\r\n         \r\n          console.log(feedback);\r\n          \r\n          if((feedback.info).length==0){\r\n            this.setState({libarysNotFoundShow:''});\r\n          }\r\n          if((feedback.info).length>0){\r\n            this.setState({libaryList:feedback.info});\r\n          }\r\n          \r\n       \r\n   })\r\n   .catch((error)=>{ \r\n   });\r\n}\r\nrender() {\r\n                                        \r\n  return (                                      \r\n          <div className=\"AdminHome\" >    \r\n             <h1 className=\"text-center m-5 font-weight-bold\"> REGISTERED LIBRARY'S</h1> \r\n             \r\n             <br></br>\r\n            \r\n                <div className=\"alert alert-primary   alert-custom\" style={{display:this.state.libarysNotFoundShow}}  role=\"alert\">\r\n                      No libary's Found..!\r\n                </div>\r\n               <div className=\"text-center\">\r\n                   <div className=\"spinner-border  spinner\" style={{display:this.state.spinnerShow}}  role=\"status\" > </div>\r\n               </div>\r\n               {/* style={{display:this.state.tableShow}} */}\r\n              <div className=\"m-5\">\r\n                    <div className=\"table-responsive\" >\r\n                  <table className=\"table table-hover\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th scope=\"col\">No</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Place</th>\r\n                        <th scope=\"col\">Pincode</th>\r\n                        <th scope=\"col\">email</th>\r\n                        <th scope=\"col\">Registration number</th>\r\n                        <th scope=\"col\">Active</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        this.state.libaryList.map((item,key)=>(\r\n                          \r\n                          <tr key={key}>\r\n                              <th scope=\"row\">{key+1}</th>\r\n                              <td>{item.name}</td>\r\n                              <td>{item.place}</td>\r\n                              <td>{item.pincode}</td>\r\n                              <td>{item.email}</td>\r\n                              <td>{item.registrationNo}</td>\r\n                              <td className=\"text-center\">\r\n                                  <Check isActive={item.isActive} libraryName={item.name} libraryId={item._id}></Check>\r\n                              </td>\r\n                         </tr>\r\n                        ))\r\n                     }\r\n                      \r\n                    </tbody>\r\n                  </table>\r\n                  </div>\r\n              </div>\r\n          </div>                              \r\n    );                                          \r\n }                                              \r\n }                                              \r\n                                                \r\n                                                \r\nexport default AdminHome;                 \r\n","C:\\Users\\Shilson_P\\Desktop\\hoby\\library-management-front-end\\library-management\\src\\components\\LibraryTableCheck\\LibraryTableCheck.js",["127","128"],"import React from 'react';                      \r\nimport './LibraryTableCheck.css';                 \r\nimport axios from 'axios';                                               \r\n                                                \r\nclass LibraryTableCheck extends React.Component { \r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      libraryName:'',\r\n      libarayId:'',\r\n      showDialogue:'none',\r\n      message:'',\r\n      spinnerShow:'none',\r\n      buttonShow:'',\r\n      successMessage:'none',\r\n      errorMessage:'none'\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n  showDialogue=(library_id,library_name,para_message)=>{\r\n    this.setState({showDialogue:'',libraryName:library_name,libarayId:library_id,message:para_message});\r\n  }\r\n  hideDialogue=()=>{\r\n    this.setState({showDialogue:'none',libraryName:'',libarayId:'',message:''});\r\n  }\r\n\r\n  communicateWithServer=(action)=>{\r\n    //  console.log(action);\r\n     let activate_or_deactivate;\r\n\r\n     if(action==='activate'){\r\n       activate_or_deactivate=true;\r\n     }\r\n     if(action==='deactivate'){\r\n      activate_or_deactivate=false;\r\n     }\r\n\r\n\r\n     this.setState({spinnerShow:'',buttonShow:'none',successMessage:'none',errorMessage:'none'});\r\n      axios.post(\"https://manage-library-backend.herokuapp.com/admin/approve-library\",{\r\n        libraryId:this.state.libarayId,\r\n        isActive:activate_or_deactivate\r\n        })\r\n      .then( (response)=>{\r\n           this.setState({spinnerShow:'none',buttonShow:''});\r\n              let feedback=response.data;\r\n            \r\n              // console.log(feedback);\r\n              \r\n              if(feedback.status=='success'){\r\n                this.setState({successMessage:''});\r\n              }\r\n              if(feedback.status=='error'){\r\n                this.setState({errorMessage:''});\r\n              }\r\n\r\n              setTimeout(() => {\r\n                this.reLoadPage();\r\n              },500);\r\n              \r\n              \r\n          \r\n      })\r\n      .catch((error)=>{ \r\n        this.setState({spinnerShow:'none',buttonShow:''});\r\n      });\r\n  }\r\n  reLoadPage=()=>{window.location.reload();}\r\nrender() {                                      \r\n  return (                                      \r\n          <div className=\"LibraryTableCheck\" >  \r\n            {this.props.isActive &&\r\n                 <input onChange={()=>this.showDialogue(this.props.libraryId,this.props.libraryName,'deactivate')} type=\"checkbox\" checked></input> \r\n             }\r\n             {! this.props.isActive &&\r\n                <input onChange={()=>this.showDialogue(this.props.libraryId,this.props.libraryName,'activate')} type=\"checkbox\" ></input> \r\n\r\n             }\r\n              <div className=\"issue-book-dialouge\" style={{width:'50vh',display:this.state.showDialogue}} >                \r\n                  <div className=\"login-header\">\r\n                    <button type=\"button\" className=\"close \" onClick={this.hideDialogue}>\r\n                       <span aria-hidden=\"true\" className=\"close-custom\">&times;</span>\r\n                    </button>\r\n                    <h3 className=\"sign-in\">{this.state.message} Library</h3>\r\n                  </div>\r\n                  <div className=\"login-body\">\r\n                      <br></br>\r\n                      <div className=\"alert alert-success\" role=\"alert\" style={{display:this.state.successMessage}}>{this.state.libraryName} {this.state.message} successfully.! </div>\r\n                      <div className=\"alert alert-danger\" role=\"alert\" style={{display:this.state.errorMessage}}>Something went wrong try again.! </div>\r\n                      <h4>Do you want to {this.state.message} {this.state.libraryName}</h4>\r\n                      <br></br>\r\n                      <button className=\"button-common\"   style={{display:this.state.buttonShow}} onClick={()=>this.communicateWithServer(this.state.message)} >{this.state.message}</button><br></br>\r\n                      <div className=\"spinner-border  spinner\"  role=\"status\" style={{display:this.state.spinnerShow}} ></div>\r\n                  </div>                                           \r\n                </div> \r\n          </div>                              \r\n    );                                          \r\n }                                              \r\n }                                              \r\n                                                \r\n                                                \r\nexport default LibraryTableCheck;                 \r\n",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":3,"column":20,"nodeType":"135","messageId":"136","endLine":3,"endColumn":30},{"ruleId":"137","severity":1,"message":"138","line":96,"column":25,"nodeType":"139","messageId":"140","endLine":96,"endColumn":27},{"ruleId":"137","severity":1,"message":"138","line":99,"column":25,"nodeType":"139","messageId":"140","endLine":99,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":137,"column":17,"nodeType":"143","endLine":137,"endColumn":54},{"ruleId":"141","severity":1,"message":"144","line":149,"column":27,"nodeType":"143","endLine":149,"endColumn":52},{"ruleId":"141","severity":1,"message":"142","line":153,"column":29,"nodeType":"143","endLine":153,"endColumn":191},{"ruleId":"141","severity":1,"message":"144","line":157,"column":31,"nodeType":"143","endLine":157,"endColumn":104},{"ruleId":"141","severity":1,"message":"144","line":158,"column":31,"nodeType":"143","endLine":158,"endColumn":101},{"ruleId":"141","severity":1,"message":"142","line":163,"column":29,"nodeType":"143","endLine":163,"endColumn":191},{"ruleId":"141","severity":1,"message":"144","line":167,"column":31,"nodeType":"143","endLine":167,"endColumn":107},{"ruleId":"141","severity":1,"message":"144","line":168,"column":31,"nodeType":"143","endLine":168,"endColumn":105},{"ruleId":"141","severity":1,"message":"144","line":173,"column":27,"nodeType":"143","endLine":173,"endColumn":79},{"ruleId":"133","severity":1,"message":"145","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":23},{"ruleId":"146","severity":1,"message":"147","line":134,"column":55,"nodeType":"148","messageId":"140","endLine":134,"endColumn":82},{"ruleId":"137","severity":1,"message":"138","line":158,"column":26,"nodeType":"139","messageId":"140","endLine":158,"endColumn":28},{"ruleId":"137","severity":1,"message":"138","line":164,"column":26,"nodeType":"139","messageId":"140","endLine":164,"endColumn":28},{"ruleId":"137","severity":1,"message":"138","line":132,"column":27,"nodeType":"139","messageId":"140","endLine":132,"endColumn":29},{"ruleId":"137","severity":1,"message":"138","line":135,"column":27,"nodeType":"139","messageId":"140","endLine":135,"endColumn":29},{"ruleId":"137","severity":1,"message":"138","line":30,"column":43,"nodeType":"139","messageId":"140","endLine":30,"endColumn":45},{"ruleId":"137","severity":1,"message":"138","line":104,"column":29,"nodeType":"139","messageId":"140","endLine":104,"endColumn":31},{"ruleId":"137","severity":1,"message":"138","line":110,"column":29,"nodeType":"139","messageId":"140","endLine":110,"endColumn":31},{"ruleId":"146","severity":1,"message":"149","line":169,"column":95,"nodeType":"148","messageId":"140","endLine":169,"endColumn":124},{"ruleId":"137","severity":1,"message":"138","line":172,"column":29,"nodeType":"139","messageId":"140","endLine":172,"endColumn":31},{"ruleId":"137","severity":1,"message":"138","line":180,"column":29,"nodeType":"139","messageId":"140","endLine":180,"endColumn":31},{"ruleId":"137","severity":1,"message":"138","line":180,"column":58,"nodeType":"139","messageId":"140","endLine":180,"endColumn":60},{"ruleId":"137","severity":1,"message":"138","line":183,"column":29,"nodeType":"139","messageId":"140","endLine":183,"endColumn":31},{"ruleId":"137","severity":1,"message":"138","line":183,"column":58,"nodeType":"139","messageId":"140","endLine":183,"endColumn":60},{"ruleId":"137","severity":1,"message":"138","line":218,"column":30,"nodeType":"139","messageId":"140","endLine":218,"endColumn":32},{"ruleId":"137","severity":1,"message":"138","line":224,"column":30,"nodeType":"139","messageId":"140","endLine":224,"endColumn":32},{"ruleId":"137","severity":1,"message":"138","line":261,"column":143,"nodeType":"139","messageId":"140","endLine":261,"endColumn":145},{"ruleId":"137","severity":1,"message":"138","line":266,"column":108,"nodeType":"139","messageId":"140","endLine":266,"endColumn":110},{"ruleId":"137","severity":1,"message":"138","line":267,"column":108,"nodeType":"139","messageId":"140","endLine":267,"endColumn":110},{"ruleId":"137","severity":1,"message":"138","line":270,"column":102,"nodeType":"139","messageId":"140","endLine":270,"endColumn":104},{"ruleId":"133","severity":1,"message":"150","line":3,"column":9,"nodeType":"135","messageId":"136","endLine":3,"endColumn":19},{"ruleId":"137","severity":1,"message":"138","line":27,"column":19,"nodeType":"139","messageId":"140","endLine":27,"endColumn":21},{"ruleId":"137","severity":1,"message":"138","line":35,"column":20,"nodeType":"139","messageId":"140","endLine":35,"endColumn":22},{"ruleId":"137","severity":1,"message":"138","line":33,"column":36,"nodeType":"139","messageId":"140","endLine":33,"endColumn":38},{"ruleId":"137","severity":1,"message":"138","line":52,"column":33,"nodeType":"139","messageId":"140","endLine":52,"endColumn":35},{"ruleId":"137","severity":1,"message":"138","line":55,"column":33,"nodeType":"139","messageId":"140","endLine":55,"endColumn":35},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ValidationError' is defined but never used.","no-dupe-keys","Duplicate key 'accountCreationErrorDisplay'.","ObjectExpression","Duplicate key 'issuebookDialogueItemsDisplay'.","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation"]